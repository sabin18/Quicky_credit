{"version":3,"sources":["votesController.js"],"names":["voteController","req","res","json","status","message","posts","votes","id","parseInt","length","newvotes","createdon","moment","utc","format","createdby","office","candidate","push","params","vote","find","onevotes","onePost","error"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;IAEMA,c;;;;;;;6BACUC,G,EAAKC,G,EAAK;AACtB,aAAOA,IAAIC,IAAJ,CAAS;AACdC,gBAAO,GADO;AAEdC,iBAAS,mBAFK;AAGdC,eAAOC;AAHO,OAAT,CAAP;AAMH;;;+BACiBN,G,EAAKC,G,EAAK;AAC1B,UAAMM,KAAKC,SAASF,gBAAMG,MAAf,IAAyB,CAApC;;AAEA,UAAMC,WAAW;AACfH,cADe;AAEfI,mBAAUC,iBAAOC,GAAP,GAAaC,MAAb,EAFK;AAGfC,mBAAU,CAHK;AAIfC,gBAAO,CAJQ;AAKfC,mBAAU;;AALK,OAAjB;AAQAX,sBAAMY,IAAN,CAAWR,QAAX;AACA,aAAOT,IAAIE,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,gBAAO,GADmB;AAE1BC,iBAAS;AAFiB,OAArB,CAAP;AAID;;AAED;;;;+BACkBJ,G,EAAKC,G,EAAK;AAAA,UAChBM,EADgB,GACTP,IAAImB,MADK,CAChBZ,EADgB;;AAExB,UAAMa,OAAOd,gBAAMe,IAAN,CAAW;AAAA,eAAYC,SAASf,EAAT,IAAeA,EAA3B;AAAA,OAAX,CAAb;AACA,UAAIa,IAAJ,EAAU;AACR,eAAOnB,IAAIE,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,kBAAO,GADmB;AAE1BC,mBAAS,gBAFiB;AAG1BmB,mBAASH;AAHiB,SAArB,CAAP;AAKD,OAND,MAMO;AACLnB,YAAIE,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AACnBC,kBAAO,GADY;AAEnBqB,iBAAO;AAFY,SAArB;AAID;AACF;;;;;;kBAIYzB,c","file":"votesController.js","sourceRoot":"C:/Users/PIH/Documents/andela curriculum/pratice/Politico/controller","sourcesContent":["import votes from \"../db/votes\";\r\nimport moment from \"moment\";\r\n\r\nclass voteController{\r\nstatic getvotes(req, res) {\r\n    return res.json({\r\n      status:200,  \r\n      message: \"List of all votes\",\r\n      posts: votes\r\n    });\r\n\r\n}\r\nstatic createvote(req, res) {\r\n  const id = parseInt(votes.length) + 1;\r\n\r\n  const newvotes = {\r\n    id,\r\n    createdon:moment.utc().format(),\r\n    createdby:1,\r\n    office:1,\r\n    candidate:3,\r\n    \r\n  };\r\n  votes.push(newvotes);\r\n  return res.status(200).json({  \r\n    status:200,\r\n    message: \"your votes have been recorded\"\r\n  });\r\n}\r\n\r\n//get votes by id\r\nstatic getOnevote(req, res) {\r\n    const { id } = req.params;\r\n    const vote = votes.find(onevotes => onevotes.id == id);\r\n    if (vote) {\r\n      return res.status(200).json({\r\n        status:200,\r\n        message: \"one vote found\",\r\n        onePost: vote\r\n      });\r\n    } else {\r\n      res.status(404).json({\r\n        status:404,\r\n        error: \"no vote found with that id\"\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default voteController;"]}