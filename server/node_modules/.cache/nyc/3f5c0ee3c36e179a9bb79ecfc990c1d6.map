{"version":3,"sources":["usercontroller.js"],"names":["usersController","req","res","json","status","message","user","users","id","params","find","oneuser","onePost","error","parseInt","length","body","firstname","lastname","othername","email","phonenumber","passporturl","newuser","isadmin","push","updatePost","finduser","findIndex","post","splice","filter","Posts"],"mappings":"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","file":"usercontroller.js","sourceRoot":"C:/Users/PIH/Documents/andela curriculum/pratice/Politico/controller","sourcesContent":["\r\nimport users from \"../db/user\";\r\nclass usersController{\r\n\r\nstatic getuser(req, res) {\r\n    return res.json({\r\n      status:200,  \r\n      message: \"List of all users\",\r\n      user: users\r\n    });\r\n}\r\n\r\n//get user by id\r\nstatic getOneuser(req, res) {\r\n  const { id } = req.params;\r\n  const user = users.find(oneuser => oneuser.id == id);\r\n  if (user) {\r\n    return res.status(200).json({\r\n      status:200,\r\n      message: \"one user found\",\r\n      onePost: user\r\n    });\r\n  } else {\r\n    res.status(404).json({\r\n      error: \"no user found with that id\"\r\n    });\r\n  }\r\n}\r\n\r\n\r\n    //update user\r\n   static createuser(req, res) {\r\n    const id = parseInt(users.length) + 1;\r\n    const {firstname,lastname,othername,email,phonenumber,passporturl} = req.body;\r\n    const newuser = {\r\n      id,\r\n      firstname,\r\n      lastname,\r\n      othername,\r\n      email,\r\n      phonenumber,\r\n      passporturl,\r\n      isadmin:'false',\r\n      \r\n    };\r\n    users.push(newuser);\r\n    return res.status(200).json({  \r\n      status:200,\r\n      message: \"created a new user\"\r\n    });\r\n    }\r\n\r\n  static updateuser(req, res) {\r\n    const { id } = req.params;\r\n    const user = users.find(updatePost => updatePost.id == id);\r\n    if (user) {\r\n          (user.firstname = req.body.firstname), (user.lastname=req.body.lastname), (user.othername=req.body.othername),(user.email=req.body.email),(user.phonenumber=req.body.phonenumber),(user.passporturl=req.body.passporturl),(user.body = req.body.body);\r\n      return res.status(200).json({\r\n        status:200,\r\n        message: \"user successfully updated\",\r\n        updatePost: user\r\n      });\r\n    } else {\r\n      res.status(404).json({\r\n        status:404,\r\n        error: \"user cannot be updated\"\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  static deleteuser(req, res) {\r\n    let { id } = req.params;\r\n    const finduser = users.findIndex(post => {\r\n      return post.id == parseInt(id, 10);\r\n    });\r\n    \r\n\r\n    if (finduser) {\r\n      users.splice(finduser,1);\r\n      const newuser = users.filter(post => {\r\n        return post!== finduser;\r\n      });\r\n      return res.status(200).json({\r\n        status:200,\r\n        message: \"user successfully deleted\",\r\n        Posts: newuser\r\n      });\r\n    } else {\r\n      return res.status(404).json({\r\n        status:404,\r\n        error: \"could not delete a user\"\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default usersController;"]}