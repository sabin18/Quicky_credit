{"version":3,"sources":["connection.js"],"names":["dotenv","config","pool","Pool","user","host","database","port","password","connect","execute","sql","data","connection","query","result","rows","console","log","message","release"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;;;AACA;AACA;AACA;;AAEAA,iBAAOC,MAAP;AACA;AACA;AACA,IAAMC,OAAO,IAAIC,QAAJ,CAAS;AACpBC,QAAK,UADe;AAEpBC,QAAK,WAFe;AAGpBC,YAAS,UAHW;AAIpBC,QAAK,MAJe;AAKpBC,YAAU;AALU,CAAT,CAAb;;AAQA,IAAMC;AAAA,qEAAU;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAYP,KAAKO,OAAL,EAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAEA;AACA,IAAMC;AAAA,sEAAU,kBAAOC,GAAP;AAAA,QAAYC,IAAZ,uEAAmB,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACWH,SADX;;AAAA;AACRI,sBADQ;AAAA;AAAA;AAAA,mBAISA,WAAWC,KAAX,CAAiBH,GAAjB,EAAsBC,IAAtB,CAJT;;AAAA;AAING,kBAJM;AAAA,8CAKLA,OAAOC,IALF;;AAAA;AAAA;AAAA;;AAOZ;AACAC,oBAAQC,GAAR,CAAY,aAAMC,OAAlB;;AARY;AAAA;;AAUZ;AACAN,uBAAWO,OAAX;AAXY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;;AAAA;AAAA;AAAA;AAAA,GAAN;kBAceV,O","file":"connection.js","sourceRoot":"C:/Users/PIH/Documents/andela curriculum/pratice/politico2/src","sourcesContent":["import dotenv from 'dotenv';\r\nimport { Pool } from 'pg';\r\nimport 'babel-polyfill';\r\n// Use dotenv to configure thhe environment variables\r\n// You need to put all environment variables in the .env file like passwords, PGDatabase.\r\n//\r\n\r\ndotenv.config();\r\n// instantiate the connection string\r\n// const connectionString\r\nconst pool = new Pool({\r\n  user:'postgres' ,\r\n  host:'localhost',\r\n  database:'postgres',\r\n  port:'5432',\r\n  password: '1234',\r\n});\r\n\r\nconst connect = async () => pool.connect();\r\n\r\n// use async for a function that will have to wait for another one to complete.\r\nconst execute = async (sql, data = []) => {\r\n  const connection = await connect();\r\n  try {\r\n    // wait for the query using await\r\n    const result = await connection.query(sql, data);\r\n    return result.rows;\r\n  } catch (error) {\r\n    // Error handling\r\n    console.log(error.message);\r\n  } finally {\r\n    // close the pool or the databasee\r\n    connection.release();\r\n  }\r\n};\r\nexport default execute;"]}